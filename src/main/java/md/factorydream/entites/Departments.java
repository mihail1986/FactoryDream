package md.factorydream.entites;
// Generated Apr 13, 2016 10:19:57 AM by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Departments generated by hbm2java
 */
@Entity
@Table(name = "departments", schema = "public"
)

public class Departments implements java.io.Serializable {

    private short id;
    private Employees employees;
    private StatusCod statusCod;
    private Users users;
    private String name;
    private String departmentDescription;
    private Date lastUpdateDate;
    private Set<ReportTemplate> reportTemplates = new HashSet<ReportTemplate>(0);
    private Set<Equipment> equipments = new HashSet<Equipment>(0);
    private Set<UserDepartment> userDepartments = new HashSet<UserDepartment>(0);
    private Set<JobsHistory> jobsHistories = new HashSet<JobsHistory>(0);

    public Departments() {
    }

    public Departments(short id, Users users, String name) {
        this.id = id;
        this.users = users;
        this.name = name;
    }

    public Departments(short id, Employees employees, StatusCod statusCod, Users users, String name, String departmentDescription, Date lastUpdateDate, Set<ReportTemplate> reportTemplates, Set<Equipment> equipments, Set<UserDepartment> userDepartments, Set<JobsHistory> jobsHistories) {
        this.id = id;
        this.employees = employees;
        this.statusCod = statusCod;
        this.users = users;
        this.name = name;
        this.departmentDescription = departmentDescription;
        this.lastUpdateDate = lastUpdateDate;
        this.reportTemplates = reportTemplates;
        this.equipments = equipments;
        this.userDepartments = userDepartments;
        this.jobsHistories = jobsHistories;
    }

    @Id

    @Column(name = "id", unique = true, nullable = false)
    public short getId() {
        return this.id;
    }

    public void setId(short id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_manager")
    public Employees getEmployees() {
        return this.employees;
    }

    public void setEmployees(Employees employees) {
        this.employees = employees;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_status_code")
    public StatusCod getStatusCod() {
        return this.statusCod;
    }

    public void setStatusCod(StatusCod statusCod) {
        this.statusCod = statusCod;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_user_last_update", nullable = false)
    public Users getUsers() {
        return this.users;
    }

    public void setUsers(Users users) {
        this.users = users;
    }

    @Column(name = "name", nullable = false, length = 100)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "department_description")
    public String getDepartmentDescription() {
        return this.departmentDescription;
    }

    public void setDepartmentDescription(String departmentDescription) {
        this.departmentDescription = departmentDescription;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "last_update_date", length = 29)
    public Date getLastUpdateDate() {
        return this.lastUpdateDate;
    }

    public void setLastUpdateDate(Date lastUpdateDate) {
        this.lastUpdateDate = lastUpdateDate;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "departments")
    public Set<ReportTemplate> getReportTemplates() {
        return this.reportTemplates;
    }

    public void setReportTemplates(Set<ReportTemplate> reportTemplates) {
        this.reportTemplates = reportTemplates;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "departments")
    public Set<Equipment> getEquipments() {
        return this.equipments;
    }

    public void setEquipments(Set<Equipment> equipments) {
        this.equipments = equipments;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "departments")
    public Set<UserDepartment> getUserDepartments() {
        return this.userDepartments;
    }

    public void setUserDepartments(Set<UserDepartment> userDepartments) {
        this.userDepartments = userDepartments;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "departments")
    public Set<JobsHistory> getJobsHistories() {
        return this.jobsHistories;
    }

    public void setJobsHistories(Set<JobsHistory> jobsHistories) {
        this.jobsHistories = jobsHistories;
    }

}
