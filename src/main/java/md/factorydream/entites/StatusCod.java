package md.factorydream.entites;
// Generated Apr 13, 2016 10:19:57 AM by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * StatusCod generated by hbm2java
 */
@Entity
@Table(name = "status_cod", schema = "public"
)

public class StatusCod implements java.io.Serializable {

    private short id;
    private StatusGroup statusGroup;
    private Statuses statuses;
    private Users users;
    private String codName;
    private Date lastUpdateDate;
    private Set<Events> eventses = new HashSet<>(0);
    private Set<OrderParameters> orderParameterses = new HashSet<>(0);
    private Set<Equipment> equipments = new HashSet<>(0);
    private Set<ReportTemplate> reportTemplates = new HashSet<>(0);
    private Set<TemplateParameters> templateParameterses = new HashSet<>(0);
    private Set<Orders> orderses = new HashSet<>(0);
    private Set<Models> modelses = new HashSet<>(0);
    private Set<Access> accesses = new HashSet<>(0);
    private Set<Diameters> diameterses = new HashSet<>(0);
    private Set<Notes> noteses = new HashSet<>(0);
    private Set<Roles> roleses = new HashSet<>(0);
    private Set<Url> urls = new HashSet<>(0);
    private Set<Customers> customerses = new HashSet<>(0);
    private Set<Jobs> jobses = new HashSet<>(0);
    private Set<Reports> reportses = new HashSet<>(0);
    private Set<Departments> departmentses = new HashSet<>(0);
    private Set<Threads> threadses = new HashSet<Threads>(0);
    private Set<Appointment> appointments = new HashSet<Appointment>(0);
    private Set<Users> userses = new HashSet<Users>(0);
    private Set<Colors> colorses = new HashSet<Colors>(0);
    private Set<Employees> employeeses = new HashSet<Employees>(0);
    private Set<ReportSequence> reportSequences = new HashSet<ReportSequence>(0);
    private Set<Types> typeses = new HashSet<Types>(0);

    public StatusCod() {
    }

    public StatusCod(short id, StatusGroup statusGroup, Statuses statuses, Users users, String codName) {
        this.id = id;
        this.statusGroup = statusGroup;
        this.statuses = statuses;
        this.users = users;
        this.codName = codName;
    }

    public StatusCod(short id, StatusGroup statusGroup, Statuses statuses, Users users, String codName, Date lastUpdateDate, Set<Events> eventses, Set<OrderParameters> orderParameterses, Set<Equipment> equipments, Set<ReportTemplate> reportTemplates, Set<TemplateParameters> templateParameterses, Set<Orders> orderses, Set<Models> modelses, Set<Access> accesses, Set<Diameters> diameterses, Set<Notes> noteses, Set<Roles> roleses, Set<Url> urls, Set<Customers> customerses, Set<Jobs> jobses, Set<Reports> reportses, Set<Departments> departmentses, Set<Threads> threadses, Set<Appointment> appointments, Set<Users> userses, Set<Colors> colorses, Set<Employees> employeeses, Set<ReportSequence> reportSequences, Set<Types> typeses) {
        this.id = id;
        this.statusGroup = statusGroup;
        this.statuses = statuses;
        this.users = users;
        this.codName = codName;
        this.lastUpdateDate = lastUpdateDate;
        this.eventses = eventses;
        this.orderParameterses = orderParameterses;
        this.equipments = equipments;
        this.reportTemplates = reportTemplates;
        this.templateParameterses = templateParameterses;
        this.orderses = orderses;
        this.modelses = modelses;
        this.accesses = accesses;
        this.diameterses = diameterses;
        this.noteses = noteses;
        this.roleses = roleses;
        this.urls = urls;
        this.customerses = customerses;
        this.jobses = jobses;
        this.reportses = reportses;
        this.departmentses = departmentses;
        this.threadses = threadses;
        this.appointments = appointments;
        this.userses = userses;
        this.colorses = colorses;
        this.employeeses = employeeses;
        this.reportSequences = reportSequences;
        this.typeses = typeses;
    }

    @Id

    @Column(name = "id", unique = true, nullable = false)
    public short getId() {
        return this.id;
    }

    public void setId(short id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_group", nullable = false)
    public StatusGroup getStatusGroup() {
        return this.statusGroup;
    }

    public void setStatusGroup(StatusGroup statusGroup) {
        this.statusGroup = statusGroup;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "id_status", nullable = false)
    public Statuses getStatuses() {
        return this.statuses;
    }

    public void setStatuses(Statuses statuses) {
        this.statuses = statuses;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_user_last_update", nullable = false)
    public Users getUsers() {
        return this.users;
    }

    public void setUsers(Users users) {
        this.users = users;
    }

    @Column(name = "cod_name", nullable = false, length = 10)
    public String getCodName() {
        return this.codName;
    }

    public void setCodName(String codName) {
        this.codName = codName;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "last_update_date", length = 29)
    public Date getLastUpdateDate() {
        return this.lastUpdateDate;
    }

    public void setLastUpdateDate(Date lastUpdateDate) {
        this.lastUpdateDate = lastUpdateDate;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "statusCod")
    public Set<Events> getEventses() {
        return this.eventses;
    }

    public void setEventses(Set<Events> eventses) {
        this.eventses = eventses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "statusCod")
    public Set<OrderParameters> getOrderParameterses() {
        return this.orderParameterses;
    }

    public void setOrderParameterses(Set<OrderParameters> orderParameterses) {
        this.orderParameterses = orderParameterses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "statusCod")
    public Set<Equipment> getEquipments() {
        return this.equipments;
    }

    public void setEquipments(Set<Equipment> equipments) {
        this.equipments = equipments;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "statusCod")
    public Set<ReportTemplate> getReportTemplates() {
        return this.reportTemplates;
    }

    public void setReportTemplates(Set<ReportTemplate> reportTemplates) {
        this.reportTemplates = reportTemplates;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "statusCod")
    public Set<TemplateParameters> getTemplateParameterses() {
        return this.templateParameterses;
    }

    public void setTemplateParameterses(Set<TemplateParameters> templateParameterses) {
        this.templateParameterses = templateParameterses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "statusCod")
    public Set<Orders> getOrderses() {
        return this.orderses;
    }

    public void setOrderses(Set<Orders> orderses) {
        this.orderses = orderses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "statusCod")
    public Set<Models> getModelses() {
        return this.modelses;
    }

    public void setModelses(Set<Models> modelses) {
        this.modelses = modelses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "statusCod")
    public Set<Access> getAccesses() {
        return this.accesses;
    }

    public void setAccesses(Set<Access> accesses) {
        this.accesses = accesses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "statusCod")
    public Set<Diameters> getDiameterses() {
        return this.diameterses;
    }

    public void setDiameterses(Set<Diameters> diameterses) {
        this.diameterses = diameterses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "statusCod")
    public Set<Notes> getNoteses() {
        return this.noteses;
    }

    public void setNoteses(Set<Notes> noteses) {
        this.noteses = noteses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "statusCod")
    public Set<Roles> getRoleses() {
        return this.roleses;
    }

    public void setRoleses(Set<Roles> roleses) {
        this.roleses = roleses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "statusCod")
    public Set<Url> getUrls() {
        return this.urls;
    }

    public void setUrls(Set<Url> urls) {
        this.urls = urls;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "statusCod")
    public Set<Customers> getCustomerses() {
        return this.customerses;
    }

    public void setCustomerses(Set<Customers> customerses) {
        this.customerses = customerses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "statusCod")
    public Set<Jobs> getJobses() {
        return this.jobses;
    }

    public void setJobses(Set<Jobs> jobses) {
        this.jobses = jobses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "statusCod")
    public Set<Reports> getReportses() {
        return this.reportses;
    }

    public void setReportses(Set<Reports> reportses) {
        this.reportses = reportses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "statusCod")
    public Set<Departments> getDepartmentses() {
        return this.departmentses;
    }

    public void setDepartmentses(Set<Departments> departmentses) {
        this.departmentses = departmentses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "statusCod")
    public Set<Threads> getThreadses() {
        return this.threadses;
    }

    public void setThreadses(Set<Threads> threadses) {
        this.threadses = threadses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "statusCod")
    public Set<Appointment> getAppointments() {
        return this.appointments;
    }

    public void setAppointments(Set<Appointment> appointments) {
        this.appointments = appointments;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "statusCod")
    public Set<Users> getUserses() {
        return this.userses;
    }

    public void setUserses(Set<Users> userses) {
        this.userses = userses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "statusCod")
    public Set<Colors> getColorses() {
        return this.colorses;
    }

    public void setColorses(Set<Colors> colorses) {
        this.colorses = colorses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "statusCod")
    public Set<Employees> getEmployeeses() {
        return this.employeeses;
    }

    public void setEmployeeses(Set<Employees> employeeses) {
        this.employeeses = employeeses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "statusCod")
    public Set<ReportSequence> getReportSequences() {
        return this.reportSequences;
    }

    public void setReportSequences(Set<ReportSequence> reportSequences) {
        this.reportSequences = reportSequences;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "statusCod")
    public Set<Types> getTypeses() {
        return this.typeses;
    }

    public void setTypeses(Set<Types> typeses) {
        this.typeses = typeses;
    }

}
