package md.factorydream.entites;
// Generated Apr 13, 2016 10:19:57 AM by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Appointment generated by hbm2java
 */
@Entity
@Table(name = "appointment", schema = "public"
)

public class Appointment implements java.io.Serializable {

    private long id;
    private Equipment equipment;
    private Orders orders;
    private StatusCod statusCod;
    private Users users;
    private Date appointmentDate;
    private String note;
    private Date lastUpdateDate;
    private Set<PlanningAppointment> planningAppointments = new HashSet<PlanningAppointment>(0);

    public Appointment() {
    }

    public Appointment(long id, Equipment equipment, Orders orders, Users users, Date appointmentDate) {
        this.id = id;
        this.equipment = equipment;
        this.orders = orders;
        this.users = users;
        this.appointmentDate = appointmentDate;
    }

    public Appointment(long id, Equipment equipment, Orders orders, StatusCod statusCod, Users users, Date appointmentDate, String note, Date lastUpdateDate, Set<PlanningAppointment> planningAppointments) {
        this.id = id;
        this.equipment = equipment;
        this.orders = orders;
        this.statusCod = statusCod;
        this.users = users;
        this.appointmentDate = appointmentDate;
        this.note = note;
        this.lastUpdateDate = lastUpdateDate;
        this.planningAppointments = planningAppointments;
    }

    @Id

    @Column(name = "id", unique = true, nullable = false)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_equipment", nullable = false)
    public Equipment getEquipment() {
        return this.equipment;
    }

    public void setEquipment(Equipment equipment) {
        this.equipment = equipment;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_order", nullable = false)
    public Orders getOrders() {
        return this.orders;
    }

    public void setOrders(Orders orders) {
        this.orders = orders;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_status_code")
    public StatusCod getStatusCod() {
        return this.statusCod;
    }

    public void setStatusCod(StatusCod statusCod) {
        this.statusCod = statusCod;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_user_last_update", nullable = false)
    public Users getUsers() {
        return this.users;
    }

    public void setUsers(Users users) {
        this.users = users;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "appointment_date", nullable = false, length = 29)
    public Date getAppointmentDate() {
        return this.appointmentDate;
    }

    public void setAppointmentDate(Date appointmentDate) {
        this.appointmentDate = appointmentDate;
    }

    @Column(name = "note", length = 250)
    public String getNote() {
        return this.note;
    }

    public void setNote(String note) {
        this.note = note;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "last_update_date", length = 29)
    public Date getLastUpdateDate() {
        return this.lastUpdateDate;
    }

    public void setLastUpdateDate(Date lastUpdateDate) {
        this.lastUpdateDate = lastUpdateDate;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "appointment")
    public Set<PlanningAppointment> getPlanningAppointments() {
        return this.planningAppointments;
    }

    public void setPlanningAppointments(Set<PlanningAppointment> planningAppointments) {
        this.planningAppointments = planningAppointments;
    }

}
