package md.factorydream.entites;
// Generated Apr 13, 2016 10:19:57 AM by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Url generated by hbm2java
 */
@Entity
@Table(name = "url", schema = "public"
)

public class Url implements java.io.Serializable {

    private long id;
    private StatusCod statusCod;
    private String url;
    private String urlName;
    private String urlDescription;
    private Set<RoleAccess> roleAccesses = new HashSet<RoleAccess>(0);

    public Url() {
    }

    public Url(long id, String url, String urlName) {
        this.id = id;
        this.url = url;
        this.urlName = urlName;
    }

    public Url(long id, StatusCod statusCod, String url, String urlName, String urlDescription, Set<RoleAccess> roleAccesses) {
        this.id = id;
        this.statusCod = statusCod;
        this.url = url;
        this.urlName = urlName;
        this.urlDescription = urlDescription;
        this.roleAccesses = roleAccesses;
    }

    @Id

    @Column(name = "id", unique = true, nullable = false)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_status_code")
    public StatusCod getStatusCod() {
        return this.statusCod;
    }

    public void setStatusCod(StatusCod statusCod) {
        this.statusCod = statusCod;
    }

    @Column(name = "url", nullable = false)
    public String getUrl() {
        return this.url;
    }

    public void setUrl(String url) {
        this.url = url;
    }

    @Column(name = "url_name", nullable = false, length = 60)
    public String getUrlName() {
        return this.urlName;
    }

    public void setUrlName(String urlName) {
        this.urlName = urlName;
    }

    @Column(name = "url_description", length = 250)
    public String getUrlDescription() {
        return this.urlDescription;
    }

    public void setUrlDescription(String urlDescription) {
        this.urlDescription = urlDescription;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "url")
    public Set<RoleAccess> getRoleAccesses() {
        return this.roleAccesses;
    }

    public void setRoleAccesses(Set<RoleAccess> roleAccesses) {
        this.roleAccesses = roleAccesses;
    }

}
