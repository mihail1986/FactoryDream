package md.factorydream.entites;
// Generated Apr 13, 2016 10:19:57 AM by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * NoteGroups generated by hbm2java
 */
@Entity
@Table(name = "note_groups", schema = "public"
)

public class NoteGroups implements java.io.Serializable {

    private short id;
    private Users users;
    private String name;
    private String noteGroupDescription;
    private Date lastUpdateDate;
    private Set<GroupNotes> groupNoteses = new HashSet<GroupNotes>(0);

    public NoteGroups() {
    }

    public NoteGroups(short id, Users users, String name) {
        this.id = id;
        this.users = users;
        this.name = name;
    }

    public NoteGroups(short id, Users users, String name, String noteGroupDescription, Date lastUpdateDate, Set<GroupNotes> groupNoteses) {
        this.id = id;
        this.users = users;
        this.name = name;
        this.noteGroupDescription = noteGroupDescription;
        this.lastUpdateDate = lastUpdateDate;
        this.groupNoteses = groupNoteses;
    }

    @Id

    @Column(name = "id", unique = true, nullable = false)
    public short getId() {
        return this.id;
    }

    public void setId(short id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_user_last_update", nullable = false)
    public Users getUsers() {
        return this.users;
    }

    public void setUsers(Users users) {
        this.users = users;
    }

    @Column(name = "name", nullable = false, length = 100)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "note_group_description")
    public String getNoteGroupDescription() {
        return this.noteGroupDescription;
    }

    public void setNoteGroupDescription(String noteGroupDescription) {
        this.noteGroupDescription = noteGroupDescription;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "last_update_date", length = 29)
    public Date getLastUpdateDate() {
        return this.lastUpdateDate;
    }

    public void setLastUpdateDate(Date lastUpdateDate) {
        this.lastUpdateDate = lastUpdateDate;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "noteGroups")
    public Set<GroupNotes> getGroupNoteses() {
        return this.groupNoteses;
    }

    public void setGroupNoteses(Set<GroupNotes> groupNoteses) {
        this.groupNoteses = groupNoteses;
    }

}
