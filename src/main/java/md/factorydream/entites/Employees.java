package md.factorydream.entites;
// Generated Apr 13, 2016 10:19:57 AM by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Employees generated by hbm2java
 */
@Entity
@Table(name = "employees", schema = "public"
)

public class Employees implements java.io.Serializable {

    private int id;
    private Employees employees;
    private StatusCod statusCod;
    private Users users;
    private String firstName;
    private String lastName;
    private Date birthDate;
    private String email;
    private String address;
    private String phonenumber;
    private Date hireDate;
    private String note;
    private Date lastUpdateDate;
    private Set<Employees> employeeses = new HashSet<Employees>(0);
    private Set<JobsHistory> jobsHistories = new HashSet<JobsHistory>(0);
    private Set<Departments> departmentses = new HashSet<Departments>(0);
    private Set<EmployeesJobs> employeesJobses = new HashSet<EmployeesJobs>(0);
    private Set<UserDepartment> userDepartments = new HashSet<UserDepartment>(0);

    public Employees() {
    }

    public Employees(int id, Users users, String firstName, String lastName, Date birthDate, Date hireDate) {
        this.id = id;
        this.users = users;
        this.firstName = firstName;
        this.lastName = lastName;
        this.birthDate = birthDate;
        this.hireDate = hireDate;
    }

    public Employees(int id, Employees employees, StatusCod statusCod, Users users, String firstName, String lastName, Date birthDate, String email, String address, String phonenumber, Date hireDate, String note, Date lastUpdateDate, Set<Employees> employeeses, Set<JobsHistory> jobsHistories, Set<Departments> departmentses, Set<EmployeesJobs> employeesJobses, Set<UserDepartment> userDepartments) {
        this.id = id;
        this.employees = employees;
        this.statusCod = statusCod;
        this.users = users;
        this.firstName = firstName;
        this.lastName = lastName;
        this.birthDate = birthDate;
        this.email = email;
        this.address = address;
        this.phonenumber = phonenumber;
        this.hireDate = hireDate;
        this.note = note;
        this.lastUpdateDate = lastUpdateDate;
        this.employeeses = employeeses;
        this.jobsHistories = jobsHistories;
        this.departmentses = departmentses;
        this.employeesJobses = employeesJobses;
        this.userDepartments = userDepartments;
    }

    @Id

    @Column(name = "id", unique = true, nullable = false)
    public int getId() {
        return this.id;
    }

    public void setId(int id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "id_manager")
    public Employees getEmployees() {
        return this.employees;
    }

    public void setEmployees(Employees employees) {
        this.employees = employees;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "id_status_code")
    public StatusCod getStatusCod() {
        return this.statusCod;
    }

    public void setStatusCod(StatusCod statusCod) {
        this.statusCod = statusCod;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_user_last_update", nullable = false)
    public Users getUsers() {
        return this.users;
    }

    public void setUsers(Users users) {
        this.users = users;
    }

    @Column(name = "first_name", nullable = false, length = 100)
    public String getFirstName() {
        return this.firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    @Column(name = "last_name", nullable = false, length = 100)
    public String getLastName() {
        return this.lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "birth_date", nullable = false, length = 29)
    public Date getBirthDate() {
        return this.birthDate;
    }

    public void setBirthDate(Date birthDate) {
        this.birthDate = birthDate;
    }

    @Column(name = "email", length = 60)
    public String getEmail() {
        return this.email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    @Column(name = "address", length = 200)
    public String getAddress() {
        return this.address;
    }

    public void setAddress(String address) {
        this.address = address;
    }

    @Column(name = "phonenumber", length = 50)
    public String getPhonenumber() {
        return this.phonenumber;
    }

    public void setPhonenumber(String phonenumber) {
        this.phonenumber = phonenumber;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "hire_date", nullable = false, length = 29)
    public Date getHireDate() {
        return this.hireDate;
    }

    public void setHireDate(Date hireDate) {
        this.hireDate = hireDate;
    }

    @Column(name = "note")
    public String getNote() {
        return this.note;
    }

    public void setNote(String note) {
        this.note = note;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "last_update_date", length = 29)
    public Date getLastUpdateDate() {
        return this.lastUpdateDate;
    }

    public void setLastUpdateDate(Date lastUpdateDate) {
        this.lastUpdateDate = lastUpdateDate;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "employees")
    public Set<Employees> getEmployeeses() {
        return this.employeeses;
    }

    public void setEmployeeses(Set<Employees> employeeses) {
        this.employeeses = employeeses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "employees")
    public Set<JobsHistory> getJobsHistories() {
        return this.jobsHistories;
    }

    public void setJobsHistories(Set<JobsHistory> jobsHistories) {
        this.jobsHistories = jobsHistories;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "employees")
    public Set<Departments> getDepartmentses() {
        return this.departmentses;
    }

    public void setDepartmentses(Set<Departments> departmentses) {
        this.departmentses = departmentses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "employees")
    public Set<EmployeesJobs> getEmployeesJobses() {
        return this.employeesJobses;
    }

    public void setEmployeesJobses(Set<EmployeesJobs> employeesJobses) {
        this.employeesJobses = employeesJobses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "employees")
    public Set<UserDepartment> getUserDepartments() {
        return userDepartments;
    }

    public void setUserDepartments(Set<UserDepartment> userDepartments) {
        this.userDepartments = userDepartments;
    }

}
