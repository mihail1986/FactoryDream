package md.factorydream.entites;
// Generated Apr 13, 2016 10:19:57 AM by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Events generated by hbm2java
 */
@Entity
@Table(name = "events", schema = "public"
)

public class Events implements java.io.Serializable {

    private long id;
    private StatusCod statusCod;
    private Users users;
    private String name;
    private Date startDate;
    private Date endDate;
    private Date lastUpdateDate;
    private Set<EventParameters> eventParameterses = new HashSet<EventParameters>(0);
    private Set<PlanningAppointment> planningAppointments = new HashSet<PlanningAppointment>(0);

    public Events() {
    }

    public Events(long id, Users users, String name, Date startDate, Date endDate) {
        this.id = id;
        this.users = users;
        this.name = name;
        this.startDate = startDate;
        this.endDate = endDate;
    }

    public Events(long id, StatusCod statusCod, Users users, String name, Date startDate, Date endDate, Date lastUpdateDate, Set<EventParameters> eventParameterses, Set<PlanningAppointment> planningAppointments) {
        this.id = id;
        this.statusCod = statusCod;
        this.users = users;
        this.name = name;
        this.startDate = startDate;
        this.endDate = endDate;
        this.lastUpdateDate = lastUpdateDate;
        this.eventParameterses = eventParameterses;
        this.planningAppointments = planningAppointments;
    }

    @Id

    @Column(name = "id", unique = true, nullable = false)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_status_code")
    public StatusCod getStatusCod() {
        return this.statusCod;
    }

    public void setStatusCod(StatusCod statusCod) {
        this.statusCod = statusCod;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_user_last_update", nullable = false)
    public Users getUsers() {
        return this.users;
    }

    public void setUsers(Users users) {
        this.users = users;
    }

    @Column(name = "name", nullable = false, length = 250)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "start_date", nullable = false, length = 29)
    public Date getStartDate() {
        return this.startDate;
    }

    public void setStartDate(Date startDate) {
        this.startDate = startDate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "end_date", nullable = false, length = 29)
    public Date getEndDate() {
        return this.endDate;
    }

    public void setEndDate(Date endDate) {
        this.endDate = endDate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "last_update_date", length = 29)
    public Date getLastUpdateDate() {
        return this.lastUpdateDate;
    }

    public void setLastUpdateDate(Date lastUpdateDate) {
        this.lastUpdateDate = lastUpdateDate;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "events")
    public Set<EventParameters> getEventParameterses() {
        return this.eventParameterses;
    }

    public void setEventParameterses(Set<EventParameters> eventParameterses) {
        this.eventParameterses = eventParameterses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "events")
    public Set<PlanningAppointment> getPlanningAppointments() {
        return this.planningAppointments;
    }

    public void setPlanningAppointments(Set<PlanningAppointment> planningAppointments) {
        this.planningAppointments = planningAppointments;
    }

}
